AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: API Template for CAMMI Feedback

Resources:

  # Feedback Resource
  FeedbackParentResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt cammi.RootResourceId
      PathPart: feedback
      RestApiId: !Ref cammi

  # Customer Feedback Resource
  CustomerFeedbackFunctionResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt FeedbackParentResource.ResourceId
      PathPart: customer-feedback
      RestApiId: !Ref cammi

  # POST Method for /feedback/customer-feedback
  CustomerFeedbackFunctionResourcePOSTMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref cammi
      ResourceId: !Ref CustomerFeedbackFunctionResource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Credentials: arn:aws:iam::687088702813:role/cammi-lambda-role
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CustomerFeedbackFunctionArn}/invocations
          - CustomerFeedbackFunctionArn: !ImportValue CustomerFeedbackFunctionArn
        PassthroughBehavior: WHEN_NO_TEMPLATES
        TimeoutInMillis: 29000

  # OPTIONS Method for /feedback/customer-feedback
  CustomerFeedbackFunctionResourceOPTIONSMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref cammi
      ResourceId: !Ref CustomerFeedbackFunctionResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{ "statusCode": 200 }'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: "{}"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  # Check Customer Feedback Resource
  CheckCustomerFeedbackFunctionResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt FeedbackParentResource.ResourceId
      PathPart: check-customer-feedback
      RestApiId: !Ref cammi

  # POST Method for /feedback/check-customer-feedback
  CheckCustomerFeedbackFunctionResourcePOSTMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref cammi
      ResourceId: !Ref CheckCustomerFeedbackFunctionResource
      HttpMethod: POST
      AuthorizationType: NONE
      ApiKeyRequired: false
      Integration:
        Credentials: arn:aws:iam::687088702813:role/cammi-lambda-role
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CheckCustomerFeedbackFunctionArn}/invocations
          - CheckCustomerFeedbackFunctionArn: !ImportValue CheckCustomerFeedbackFunctionArn
        PassthroughBehavior: WHEN_NO_TEMPLATES
        TimeoutInMillis: 29000

  # OPTIONS Method for /feedback/check-customer-feedback
  CheckCustomerFeedbackFunctionResourceOPTIONSMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref cammi
      ResourceId: !Ref CheckCustomerFeedbackFunctionResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{ "statusCode": 200 }'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: "{}"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
